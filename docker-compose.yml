version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rowell-postgres
    environment:
      POSTGRES_DB: rowell_infra
      POSTGRES_USER: rowell
      POSTGRES_PASSWORD: rowell
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rowell -d rowell_infra"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: rowell-redis
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rowell Infra API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: rowell-api
    environment:
      - DATABASE_URL=postgresql+asyncpg://rowell:rowell@postgres:5432/rowell_infra
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for async tasks
  celery-worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: rowell-celery-worker
    command: celery -A api.core.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://rowell:rowell@postgres:5432/rowell_infra
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
    volumes:
      - ./api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Beat for scheduled tasks
  celery-beat:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: rowell-celery-beat
    command: celery -A api.core.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://rowell:rowell@postgres:5432/rowell_infra
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
    volumes:
      - ./api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: rowell-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: rowell-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: rowell-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
